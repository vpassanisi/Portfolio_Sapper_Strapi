import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, n as noop, e as element, t as text, a as space, c as claim_element, b as children, f as claim_text, g as detach_dev, h as claim_space, j as attr_dev, k as toggle_class, l as add_location, m as insert_dev, o as append_dev, p as listen_dev, r as run_all, q as identity, u as onMount, w as svg_element, x as set_style, y as add_render_callback, z as create_in_transition, A as transition_in, B as set_data_dev, C as validate_each_argument, D as create_component, E as claim_component, F as mount_component, G as transition_out, H as destroy_component, I as group_outros, J as check_outros, K as destroy_each, L as create_bidirectional_transition } from './client.99a38ee2.js';

/* src\css\Tailwind.svelte generated by Svelte v3.25.0 */

function create_fragment(ctx) {
	const block = {
		c: noop,
		l: noop,
		m: noop,
		p: noop,
		i: noop,
		o: noop,
		d: noop
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Tailwind", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Tailwind> was created with unknown prop '${key}'`);
	});

	return [];
}

class Tailwind extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Tailwind",
			options,
			id: create_fragment.name
		});
	}
}

/* src\components\Nav.svelte generated by Svelte v3.25.0 */

const file = "src\\components\\Nav.svelte";

function create_fragment$1(ctx) {
	let nav;
	let button0;
	let t0;
	let t1;
	let div1;
	let div0;
	let t2;
	let button1;
	let t3;
	let t4;
	let div3;
	let div2;
	let t5;
	let button2;
	let t6;
	let t7;
	let div5;
	let div4;
	let t8;
	let button3;
	let t9;
	let t10;
	let div7;
	let div6;
	let t11;
	let button4;
	let t12;
	let t13;
	let div9;
	let div8;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			nav = element("nav");
			button0 = element("button");
			t0 = text("WELCOME");
			t1 = space();
			div1 = element("div");
			div0 = element("div");
			t2 = space();
			button1 = element("button");
			t3 = text("ABOUT ME");
			t4 = space();
			div3 = element("div");
			div2 = element("div");
			t5 = space();
			button2 = element("button");
			t6 = text("SKILLS");
			t7 = space();
			div5 = element("div");
			div4 = element("div");
			t8 = space();
			button3 = element("button");
			t9 = text("PROJECTS");
			t10 = space();
			div7 = element("div");
			div6 = element("div");
			t11 = space();
			button4 = element("button");
			t12 = text("CONTACT");
			t13 = space();
			div9 = element("div");
			div8 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			nav = claim_element(nodes, "NAV", { class: true });
			var nav_nodes = children(nav);
			button0 = claim_element(nav_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t0 = claim_text(button0_nodes, "WELCOME");
			button0_nodes.forEach(detach_dev);
			t1 = claim_space(nav_nodes);
			div1 = claim_element(nav_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(nav_nodes);
			button1 = claim_element(nav_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t3 = claim_text(button1_nodes, "ABOUT ME");
			button1_nodes.forEach(detach_dev);
			t4 = claim_space(nav_nodes);
			div3 = claim_element(nav_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			children(div2).forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t5 = claim_space(nav_nodes);
			button2 = claim_element(nav_nodes, "BUTTON", { class: true });
			var button2_nodes = children(button2);
			t6 = claim_text(button2_nodes, "SKILLS");
			button2_nodes.forEach(detach_dev);
			t7 = claim_space(nav_nodes);
			div5 = claim_element(nav_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			children(div4).forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t8 = claim_space(nav_nodes);
			button3 = claim_element(nav_nodes, "BUTTON", { class: true });
			var button3_nodes = children(button3);
			t9 = claim_text(button3_nodes, "PROJECTS");
			button3_nodes.forEach(detach_dev);
			t10 = claim_space(nav_nodes);
			div7 = claim_element(nav_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			children(div6).forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			t11 = claim_space(nav_nodes);
			button4 = claim_element(nav_nodes, "BUTTON", { class: true });
			var button4_nodes = children(button4);
			t12 = claim_text(button4_nodes, "CONTACT");
			button4_nodes.forEach(detach_dev);
			t13 = claim_space(nav_nodes);
			div9 = claim_element(nav_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			children(div8).forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			nav_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button0, "class", "flex flex-row items-center justify-end text-gray-600 w-full py-2 mt-4\r\n    focus:outline-none transition-text-color duration-300 ease-in-out");
			toggle_class(button0, "text-white", /*section*/ ctx[0] === "welcome");
			add_location(button0, file, 11, 2, 268);
			attr_dev(div0, "class", "border border-welcome transition-width duration-300 ease-in-out w-0");
			toggle_class(div0, "w-full", /*section*/ ctx[0] === "welcome");
			add_location(div0, file, 19, 4, 605);
			attr_dev(div1, "class", "flex flex-row items-center justify-end w-full");
			add_location(div1, file, 18, 2, 540);
			attr_dev(button1, "class", "flex flex-row items-center justify-end text-gray-600 w-full py-2 mt-4\r\n    focus:outline-none transition-text-color duration-300 ease-in-out");
			toggle_class(button1, "text-white", /*section*/ ctx[0] === "aboutMe");
			add_location(button1, file, 23, 2, 753);
			attr_dev(div2, "class", "border border-aboutme transition-width duration-300 ease-in-out w-0");
			toggle_class(div2, "w-full", /*section*/ ctx[0] === "aboutMe");
			add_location(div2, file, 33, 4, 1160);
			attr_dev(div3, "class", "flex flex-row items-center justify-end w-full transition-width\r\n    duration-300 ease-in-out");
			add_location(div3, file, 30, 2, 1043);
			attr_dev(button2, "class", "flex flex-row items-center justify-end text-gray-600 w-full py-2 mt-4\r\n    focus:outline-none transition-text-color duration-300 ease-in-out");
			toggle_class(button2, "text-white", /*section*/ ctx[0] === "skills");
			add_location(button2, file, 37, 2, 1308);
			attr_dev(div4, "class", "border border-skills transition-width duration-300 ease-in-out w-0");
			toggle_class(div4, "w-full", /*section*/ ctx[0] === "skills");
			add_location(div4, file, 47, 4, 1716);
			attr_dev(div5, "class", "flex flex-row items-center justify-end w-full transition-width\r\n    duration-300 ease-in-out");
			add_location(div5, file, 44, 2, 1599);
			attr_dev(button3, "class", "flex flex-row items-center justify-end text-gray-600 w-full py-2 mt-4\r\n    focus:outline-none transition-text-color duration-300 ease-in-out");
			toggle_class(button3, "text-white", /*section*/ ctx[0] === "projects");
			add_location(button3, file, 51, 2, 1862);
			attr_dev(div6, "class", "border border-projects transition-width duration-300 ease-in-out\r\n      w-0");
			toggle_class(div6, "w-full", /*section*/ ctx[0] === "projects");
			add_location(div6, file, 61, 4, 2274);
			attr_dev(div7, "class", "flex flex-row items-center justify-end w-full transition-width\r\n    duration-300 ease-in-out");
			add_location(div7, file, 58, 2, 2157);
			attr_dev(button4, "class", "flex flex-row items-center justify-end text-gray-600 w-full py-2 mt-4\r\n    focus:outline-none transition-text-color duration-300 ease-in-out");
			add_location(button4, file, 66, 2, 2431);
			attr_dev(div8, "class", "border border-contact transition-width duration-300 ease-in-out w-0");
			toggle_class(div8, "w-full", /*section*/ ctx[0] === "contact");
			add_location(div8, file, 75, 4, 2795);
			attr_dev(div9, "class", "flex flex-row items-center justify-end w-full transition-width\r\n    duration-300 ease-in-out");
			add_location(div9, file, 72, 2, 2678);
			attr_dev(nav, "class", "fixed left-0 min-h-screen w-1/4 bg-dark-gray-900 hidden md:flex\r\n  flex-col items-center justify-center p-10 border-r border-dark-gray-800");
			add_location(nav, file, 8, 0, 109);
		},
		m: function mount(target, anchor) {
			insert_dev(target, nav, anchor);
			append_dev(nav, button0);
			append_dev(button0, t0);
			append_dev(nav, t1);
			append_dev(nav, div1);
			append_dev(div1, div0);
			append_dev(nav, t2);
			append_dev(nav, button1);
			append_dev(button1, t3);
			append_dev(nav, t4);
			append_dev(nav, div3);
			append_dev(div3, div2);
			append_dev(nav, t5);
			append_dev(nav, button2);
			append_dev(button2, t6);
			append_dev(nav, t7);
			append_dev(nav, div5);
			append_dev(div5, div4);
			append_dev(nav, t8);
			append_dev(nav, button3);
			append_dev(button3, t9);
			append_dev(nav, t10);
			append_dev(nav, div7);
			append_dev(div7, div6);
			append_dev(nav, t11);
			append_dev(nav, button4);
			append_dev(button4, t12);
			append_dev(nav, t13);
			append_dev(nav, div9);
			append_dev(div9, div8);

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*click_handler*/ ctx[2], false, false, false),
					listen_dev(button1, "click", /*click_handler_1*/ ctx[3], false, false, false),
					listen_dev(button2, "click", /*click_handler_2*/ ctx[4], false, false, false),
					listen_dev(button3, "click", /*click_handler_3*/ ctx[5], false, false, false),
					listen_dev(button4, "click", /*click_handler_4*/ ctx[6], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*section*/ 1) {
				toggle_class(button0, "text-white", /*section*/ ctx[0] === "welcome");
			}

			if (dirty & /*section*/ 1) {
				toggle_class(div0, "w-full", /*section*/ ctx[0] === "welcome");
			}

			if (dirty & /*section*/ 1) {
				toggle_class(button1, "text-white", /*section*/ ctx[0] === "aboutMe");
			}

			if (dirty & /*section*/ 1) {
				toggle_class(div2, "w-full", /*section*/ ctx[0] === "aboutMe");
			}

			if (dirty & /*section*/ 1) {
				toggle_class(button2, "text-white", /*section*/ ctx[0] === "skills");
			}

			if (dirty & /*section*/ 1) {
				toggle_class(div4, "w-full", /*section*/ ctx[0] === "skills");
			}

			if (dirty & /*section*/ 1) {
				toggle_class(button3, "text-white", /*section*/ ctx[0] === "projects");
			}

			if (dirty & /*section*/ 1) {
				toggle_class(div6, "w-full", /*section*/ ctx[0] === "projects");
			}

			if (dirty & /*section*/ 1) {
				toggle_class(div8, "w-full", /*section*/ ctx[0] === "contact");
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(nav);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Nav", slots, []);
	let { section } = $$props;

	const scrollTo = X => {
		window.scrollTo(0, X);
	};

	const writable_props = ["section"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Nav> was created with unknown prop '${key}'`);
	});

	const click_handler = () => scrollTo(0);
	const click_handler_1 = () => scrollTo(window.innerHeight);
	const click_handler_2 = () => scrollTo(window.innerHeight * 2);
	const click_handler_3 = () => scrollTo(window.innerHeight * 3);
	const click_handler_4 = () => scrollTo(window.innerHeight * 4);

	$$self.$$set = $$props => {
		if ("section" in $$props) $$invalidate(0, section = $$props.section);
	};

	$$self.$capture_state = () => ({ section, scrollTo });

	$$self.$inject_state = $$props => {
		if ("section" in $$props) $$invalidate(0, section = $$props.section);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		section,
		scrollTo,
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3,
		click_handler_4
	];
}

class Nav extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { section: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Nav",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*section*/ ctx[0] === undefined && !("section" in props)) {
			console.warn("<Nav> was created without expected prop 'section'");
		}
	}

	get section() {
		throw new Error("<Nav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set section(value) {
		throw new Error("<Nav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

function cubicOut(t) {
    const f = t - 1.0;
    return f * f * f + 1.0;
}
function quartInOut(t) {
    return t < 0.5
        ? +8.0 * Math.pow(t, 4.0)
        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;
}

function fade(node, { delay = 0, duration = 400, easing = identity }) {
    const o = +getComputedStyle(node).opacity;
    return {
        delay,
        duration,
        easing,
        css: t => `opacity: ${t * o}`
    };
}
function slide(node, { delay = 0, duration = 400, easing = cubicOut }) {
    const style = getComputedStyle(node);
    const opacity = +style.opacity;
    const height = parseFloat(style.height);
    const padding_top = parseFloat(style.paddingTop);
    const padding_bottom = parseFloat(style.paddingBottom);
    const margin_top = parseFloat(style.marginTop);
    const margin_bottom = parseFloat(style.marginBottom);
    const border_top_width = parseFloat(style.borderTopWidth);
    const border_bottom_width = parseFloat(style.borderBottomWidth);
    return {
        delay,
        duration,
        easing,
        css: t => `overflow: hidden;` +
            `opacity: ${Math.min(t * 20, 1) * opacity};` +
            `height: ${t * height}px;` +
            `padding-top: ${t * padding_top}px;` +
            `padding-bottom: ${t * padding_bottom}px;` +
            `margin-top: ${t * margin_top}px;` +
            `margin-bottom: ${t * margin_bottom}px;` +
            `border-top-width: ${t * border_top_width}px;` +
            `border-bottom-width: ${t * border_bottom_width}px;`
    };
}
function scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {
    const style = getComputedStyle(node);
    const target_opacity = +style.opacity;
    const transform = style.transform === 'none' ? '' : style.transform;
    const sd = 1 - start;
    const od = target_opacity * (1 - opacity);
    return {
        delay,
        duration,
        easing,
        css: (_t, u) => `
			transform: ${transform} scale(${1 - (sd * u)});
			opacity: ${target_opacity - (od * u)}
		`
    };
}

/* src\components\Welcome.svelte generated by Svelte v3.25.0 */
const file$1 = "src\\components\\Welcome.svelte";

// (26:2) {#if loaded}
function create_if_block(ctx) {
	let div7;
	let div0;
	let t0;
	let t1;
	let div1;
	let t2;
	let t3;
	let div4;
	let div2;
	let t4;
	let t5;
	let div3;
	let t6;
	let t7;
	let div5;
	let a0;
	let t8;
	let t9;
	let a1;
	let t10;
	let t11;
	let hr;
	let t12;
	let div6;
	let a2;
	let svg0;
	let g3;
	let g0;
	let g2;
	let g1;
	let path0;
	let t13;
	let a3;
	let svg1;
	let g7;
	let g4;
	let g6;
	let g5;
	let path1;
	let t14;
	let a4;
	let svg2;
	let style;
	let t15;
	let path2;
	let path3;
	let div7_intro;

	const block = {
		c: function create() {
			div7 = element("div");
			div0 = element("div");
			t0 = text("Vincent");
			t1 = space();
			div1 = element("div");
			t2 = text("Passanisi");
			t3 = space();
			div4 = element("div");
			div2 = element("div");
			t4 = text("Software Engineer from Santa Cruz, CA.");
			t5 = space();
			div3 = element("div");
			t6 = text("JavaScript, Go, Python, React, Vue, and more.");
			t7 = space();
			div5 = element("div");
			a0 = element("a");
			t8 = text("View My Resume");
			t9 = space();
			a1 = element("a");
			t10 = text("Contact Me");
			t11 = space();
			hr = element("hr");
			t12 = space();
			div6 = element("div");
			a2 = element("a");
			svg0 = svg_element("svg");
			g3 = svg_element("g");
			g0 = svg_element("g");
			g2 = svg_element("g");
			g1 = svg_element("g");
			path0 = svg_element("path");
			t13 = space();
			a3 = element("a");
			svg1 = svg_element("svg");
			g7 = svg_element("g");
			g4 = svg_element("g");
			g6 = svg_element("g");
			g5 = svg_element("g");
			path1 = svg_element("path");
			t14 = space();
			a4 = element("a");
			svg2 = svg_element("svg");
			style = svg_element("style");
			t15 = text(".st0 {\n  fill: none;\n  stroke: #fff;\n  stroke-width: 8;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 10;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL1dlbGNvbWUuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNjO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixlQUFlO0VBQ2YscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixxQkFBcUI7QUFDdkIiLCJmaWxlIjoic3JjL2NvbXBvbmVudHMvV2VsY29tZS5zdmVsdGUiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuICAgICAgICAgICAgICAuc3QwIHtcclxuICAgICAgICAgICAgICAgIGZpbGw6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBzdHJva2U6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICBzdHJva2Utd2lkdGg6IDg7XHJcbiAgICAgICAgICAgICAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XHJcbiAgICAgICAgICAgICAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG4gICAgICAgICAgICAgICAgc3Ryb2tlLW1pdGVybGltaXQ6IDEwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIl19 */");
			path2 = svg_element("path");
			path3 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			div7 = claim_element(nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div0 = claim_element(div7_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Vincent");
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div7_nodes);
			div1 = claim_element(div7_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t2 = claim_text(div1_nodes, "Passanisi");
			div1_nodes.forEach(detach_dev);
			t3 = claim_space(div7_nodes);
			div4 = claim_element(div7_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div2 = claim_element(div4_nodes, "DIV", {});
			var div2_nodes = children(div2);
			t4 = claim_text(div2_nodes, "Software Engineer from Santa Cruz, CA.");
			div2_nodes.forEach(detach_dev);
			t5 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", {});
			var div3_nodes = children(div3);
			t6 = claim_text(div3_nodes, "JavaScript, Go, Python, React, Vue, and more.");
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t7 = claim_space(div7_nodes);
			div5 = claim_element(div7_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			a0 = claim_element(div5_nodes, "A", { class: true, href: true, target: true });
			var a0_nodes = children(a0);
			t8 = claim_text(a0_nodes, "View My Resume");
			a0_nodes.forEach(detach_dev);
			t9 = claim_space(div5_nodes);
			a1 = claim_element(div5_nodes, "A", { class: true, href: true, target: true });
			var a1_nodes = children(a1);
			t10 = claim_text(a1_nodes, "Contact Me");
			a1_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t11 = claim_space(div7_nodes);
			hr = claim_element(div7_nodes, "HR", { class: true });
			t12 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			a2 = claim_element(div6_nodes, "A", { class: true, href: true });
			var a2_nodes = children(a2);

			svg0 = claim_element(
				a2_nodes,
				"svg",
				{
					class: true,
					width: true,
					height: true,
					viewBox: true,
					xmlns: true,
					"xmlns:xlink": true,
					"xmlns:sketch": true
				},
				1
			);

			var svg0_nodes = children(svg0);

			g3 = claim_element(
				svg0_nodes,
				"g",
				{
					stroke: true,
					"stroke-width": true,
					fill: true,
					"fill-rule": true,
					"sketch:type": true
				},
				1
			);

			var g3_nodes = children(g3);
			g0 = claim_element(g3_nodes, "g", { "sketch:type": true, transform: true }, 1);
			children(g0).forEach(detach_dev);

			g2 = claim_element(
				g3_nodes,
				"g",
				{
					"sketch:type": true,
					transform: true,
					stroke: true,
					"stroke-width": true
				},
				1
			);

			var g2_nodes = children(g2);
			g1 = claim_element(g2_nodes, "g", { transform: true, "sketch:type": true }, 1);
			var g1_nodes = children(g1);
			path0 = claim_element(g1_nodes, "path", { d: true, id: true }, 1);
			children(path0).forEach(detach_dev);
			g1_nodes.forEach(detach_dev);
			g2_nodes.forEach(detach_dev);
			g3_nodes.forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			a2_nodes.forEach(detach_dev);
			t13 = claim_space(div6_nodes);
			a3 = claim_element(div6_nodes, "A", { href: true });
			var a3_nodes = children(a3);

			svg1 = claim_element(
				a3_nodes,
				"svg",
				{
					class: true,
					width: true,
					height: true,
					viewBox: true,
					xmlns: true,
					"xmlns:xlink": true,
					"xmlns:sketch": true
				},
				1
			);

			var svg1_nodes = children(svg1);

			g7 = claim_element(
				svg1_nodes,
				"g",
				{
					stroke: true,
					"stroke-width": true,
					fill: true,
					"fill-rule": true,
					"sketch:type": true
				},
				1
			);

			var g7_nodes = children(g7);
			g4 = claim_element(g7_nodes, "g", { "sketch:type": true }, 1);
			children(g4).forEach(detach_dev);

			g6 = claim_element(
				g7_nodes,
				"g",
				{
					"sketch:type": true,
					transform: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true
				},
				1
			);

			var g6_nodes = children(g6);
			g5 = claim_element(g6_nodes, "g", { transform: true, "sketch:type": true }, 1);
			var g5_nodes = children(g5);
			path1 = claim_element(g5_nodes, "path", { d: true, id: true }, 1);
			children(path1).forEach(detach_dev);
			g5_nodes.forEach(detach_dev);
			g6_nodes.forEach(detach_dev);
			g7_nodes.forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			a3_nodes.forEach(detach_dev);
			t14 = claim_space(div6_nodes);
			a4 = claim_element(div6_nodes, "A", { href: true });
			var a4_nodes = children(a4);

			svg2 = claim_element(
				a4_nodes,
				"svg",
				{
					class: true,
					xmlns: true,
					"xmlns:xlink": true,
					version: true,
					id: true,
					x: true,
					y: true,
					width: true,
					height: true,
					viewBox: true,
					style: true,
					"xml:space": true
				},
				1
			);

			var svg2_nodes = children(svg2);
			style = claim_element(svg2_nodes, "style", { type: true }, 1);
			var style_nodes = children(style);
			t15 = claim_text(style_nodes, ".st0 {\n  fill: none;\n  stroke: #fff;\n  stroke-width: 8;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 10;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL1dlbGNvbWUuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNjO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixlQUFlO0VBQ2YscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixxQkFBcUI7QUFDdkIiLCJmaWxlIjoic3JjL2NvbXBvbmVudHMvV2VsY29tZS5zdmVsdGUiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuICAgICAgICAgICAgICAuc3QwIHtcclxuICAgICAgICAgICAgICAgIGZpbGw6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBzdHJva2U6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICBzdHJva2Utd2lkdGg6IDg7XHJcbiAgICAgICAgICAgICAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XHJcbiAgICAgICAgICAgICAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG4gICAgICAgICAgICAgICAgc3Ryb2tlLW1pdGVybGltaXQ6IDEwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIl19 */");
			style_nodes.forEach(detach_dev);
			path2 = claim_element(svg2_nodes, "path", { class: true, d: true, style: true }, 1);
			children(path2).forEach(detach_dev);
			path3 = claim_element(svg2_nodes, "path", { class: true, d: true, style: true }, 1);
			children(path3).forEach(detach_dev);
			svg2_nodes.forEach(detach_dev);
			a4_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-5xl font-hairline");
			add_location(div0, file$1, 30, 6, 1042);
			attr_dev(div1, "class", "text-5xl font-hairline");
			add_location(div1, file$1, 31, 6, 1099);
			add_location(div2, file$1, 34, 8, 1233);
			add_location(div3, file$1, 35, 8, 1292);
			attr_dev(div4, "class", "text-white text-center text-xl font-hairline my-4");
			add_location(div4, file$1, 32, 6, 1158);
			attr_dev(a0, "class", "text-xl font-hairline mr-10 underline");
			attr_dev(a0, "href", "https://drive.google.com/file/d/1dsJmiuSQQ-tJ52TCxLgL5QhXnVIGRmKe/view?usp=sharing");
			attr_dev(a0, "target", "_blank");
			add_location(a0, file$1, 39, 8, 1400);
			attr_dev(a1, "class", "text-xl font-hairline underline");
			attr_dev(a1, "href", "mailto:vpassanisi@gmail.com");
			attr_dev(a1, "target", "_blank");
			add_location(a1, file$1, 45, 8, 1638);
			attr_dev(div5, "class", "mb-4");
			add_location(div5, file$1, 38, 6, 1372);
			attr_dev(hr, "class", "w-1/2 mb-4");
			add_location(hr, file$1, 53, 6, 1825);
			attr_dev(g0, "sketch:type", "MSLayerGroup");
			attr_dev(g0, "transform", "translate(-720.000000, 0.000000)");
			add_location(g0, file$1, 73, 14, 2494);
			attr_dev(path0, "d", "M35.9955151,27.6266598 C35.9955151,23.8394326\r\n                    33.0511715,20.8297982 29.7726613,20.8297982\r\n                    C27.2676024,20.8297982 25.0529201,20.8297982\r\n                    23.5815904,23.9999995 C23.3099556,24.5852775\r\n                    22.9955155,26.2895184 22.9955155,27.1324171\r\n                    L22.9955155,43.4999995 L15.036777,43.4999989\r\n                    L15.0367767,22.7102582 L15.0367767,12.455873\r\n                    L23.3012671,12.455873 L23.7089346,16.5 L23.8873426,16.5\r\n                    C25.0805776,14.5783603 27.7924258,12.455873\r\n                    32.6850041,12.455873 C38.6490801,12.455873\r\n                    43.9955153,17.1766025 43.9955153,25.8297979\r\n                    L43.9955153,43.4999995 L35.9955151,43.4999995\r\n                    L35.9955151,27.6266598 Z M4.32081087,8.76648024\r\n                    C1.71699591,8.76648024 0.036776724,6.92405932\r\n                    0.036776724,4.64751022 C0.036776724,2.3156217\r\n                    1.7713812,0.525677812 4.42767319,0.525677812\r\n                    C7.08396519,0.525677812 8.71170734,2.31466757\r\n                    8.76609263,4.64751022 C8.76704675,6.92405932\r\n                    7.08491932,8.76648024 4.32081087,8.76648024\r\n                    L4.32081087,8.76648024 Z M0.995515537,43.4999995\r\n                    L0.995515303,12.4558734 L7.98371812,12.4558737\r\n                    L7.98371835,43.4999999 L0.995515537,43.4999995 Z");
			attr_dev(path0, "id", "Shape");
			add_location(path0, file$1, 84, 18, 2945);
			attr_dev(g1, "transform", "translate(725.004485, 5.500000)");
			attr_dev(g1, "sketch:type", "MSShapeGroup");
			add_location(g1, file$1, 81, 16, 2813);
			attr_dev(g2, "sketch:type", "MSLayerGroup");
			attr_dev(g2, "transform", "translate(-716.000000, 1.000000)");
			attr_dev(g2, "stroke", "#fff");
			attr_dev(g2, "stroke-width", "2");
			add_location(g2, file$1, 76, 14, 2621);
			attr_dev(g3, "stroke", "none");
			attr_dev(g3, "stroke-width", "1");
			attr_dev(g3, "fill", "none");
			attr_dev(g3, "fill-rule", "evenodd");
			attr_dev(g3, "sketch:type", "MSPage");
			add_location(g3, file$1, 67, 12, 2316);
			attr_dev(svg0, "class", "h-12 w-12");
			attr_dev(svg0, "width", "60px");
			attr_dev(svg0, "height", "60px");
			attr_dev(svg0, "viewBox", "0 0 60 60");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg0, "xmlns:sketch", "http://www.bohemiancoding.com/sketch/ns");
			add_location(svg0, file$1, 59, 10, 2008);
			attr_dev(a2, "class", "mr-8");
			attr_dev(a2, "href", "https://www.linkedin.com/in/vinny-passanisi-7a9966b8/");
			add_location(a2, file$1, 56, 8, 1897);
			attr_dev(g4, "sketch:type", "MSLayerGroup");
			add_location(g4, file$1, 128, 14, 5113);
			attr_dev(path1, "d", "M45.710328,7.26461023 C45.710328,7.26461023\r\n                    49.7891594,6.93752192 51.4260032,5.69777149\r\n                    C51.4260032,5.69777149 51.0336919,7.12495455\r\n                    46.1255745,11.6404882 C46.1255745,11.6404882\r\n                    47.7781108,36.0055044 22.5977549,41.9727222\r\n                    C22.5977549,41.9727222 9.82771721,44.7413348\r\n                    0.573996756,37.6789225 C0.573996756,37.6789225\r\n                    10.2610704,39.4282937 15.711181,33.3103948\r\n                    C15.711181,33.3103948 8.68096083,33.3826727\r\n                    6.45746056,26.1034266 C6.45746056,26.1034266\r\n                    9.11189981,26.6853253 10.6895952,25.9576457\r\n                    C10.6895952,25.9576457 2.72627742,24.2817775\r\n                    2.86992375,15.4724441 C2.86992375,15.4724441\r\n                    5.02220441,17.0748093 6.95841203,16.7832475\r\n                    C6.95841203,16.7832475 -0.214247369,10.5930706\r\n                    4.23275317,2.87770677 C4.23275317,2.87770677\r\n                    13.8437788,14.411551 25.7555598,13.7267481\r\n                    C25.5479366,12.9010645 25.4356751,12.0361793\r\n                    25.4356751,11.141893 C25.4356751,5.40743468\r\n                    30.0190793,0.755920455 35.6719848,0.755920455\r\n                    C38.5280117,0.755920455 41.1112314,1.94421879\r\n                    42.9689767,3.85897169 C44.330599,3.88224763\r\n                    47.1310988,3.63601262 49.9279773,1.60365494\r\n                    C49.9279773,1.60487999 50.0885232,3.82589534\r\n                    45.710328,7.26461023 L45.710328,7.26461023 Z");
			attr_dev(path1, "id", "Shape");
			add_location(path1, file$1, 139, 18, 5562);
			attr_dev(g5, "transform", "translate(0.000000, 10.000000)");
			attr_dev(g5, "sketch:type", "MSShapeGroup");
			add_location(g5, file$1, 136, 16, 5431);
			attr_dev(g6, "sketch:type", "MSLayerGroup");
			attr_dev(g6, "transform", "translate(4.000000, 1.000000)");
			attr_dev(g6, "stroke", "#fff");
			attr_dev(g6, "stroke-width", "2");
			attr_dev(g6, "stroke-linecap", "round");
			attr_dev(g6, "stroke-linejoin", "round");
			add_location(g6, file$1, 129, 14, 5161);
			attr_dev(g7, "stroke", "none");
			attr_dev(g7, "stroke-width", "1");
			attr_dev(g7, "fill", "none");
			attr_dev(g7, "fill-rule", "evenodd");
			attr_dev(g7, "sketch:type", "MSPage");
			add_location(g7, file$1, 122, 12, 4935);
			attr_dev(svg1, "class", "h-12 w-12 mr-8");
			attr_dev(svg1, "width", "60px");
			attr_dev(svg1, "height", "60px");
			attr_dev(svg1, "viewBox", "0 0 60 60");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg1, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg1, "xmlns:sketch", "http://www.bohemiancoding.com/sketch/ns");
			add_location(svg1, file$1, 114, 10, 4622);
			attr_dev(a3, "href", "https://twitter.com/VinnyPassanisi");
			add_location(a3, file$1, 113, 8, 4565);
			attr_dev(style, "type", "text/css");
			add_location(style, file$1, 185, 12, 7849);
			attr_dev(path2, "class", "st0");
			attr_dev(path2, "d", "M128.1,222.073");
			set_style(path2, "fill", "none");
			set_style(path2, "stroke", "#fff");
			set_style(path2, "stroke-linecap", "round");
			set_style(path2, "stroke-linejoin", "round");
			set_style(path2, "stroke-miterlimit", "10");
			set_style(path2, "stroke-width", "8");
			add_location(path2, file$1, 194, 12, 8777);
			attr_dev(path3, "class", "st0");
			attr_dev(path3, "d", "M130.164,226.986c63.917-3.557,108.667-52.057,97.259-116.5c-9.288-52.47-60.722-87.613-112.739-80.577\r\n              C61.952,37.041,21.39,85.877,27.386,139.004c5.689,47.857,35.128,70.23,59.685,80.335c5.717,2.353,13.401,5.785,15.997,5.229\r\n              c2.596-0.556,1.763-14.95,1.763-21.889c-16,2.459-21.475-3.841-24.875-7.563c-3.857-4.222-6.125-8.563-10.063-14.938\r\n              s-11.063-4.875-11.813-8.563s15-2.688,26.313,11.25c8.188,10.146,16.928,7.089,21.625,4.188c0.154-1.612,0.526-3.775,1.438-6.188\r\n              c0.967-2.557,3.625-4.104,3.208-5.854c-0.417-1.75-21.804-0.577-34-17.667c-8.809-12.344-9.129-26.955-5.667-37.833\r\n              c2.322-7.297,6.196-12.443,8.833-15.417c-1.011-2.162-2.513-6.109-2.583-11.25c-0.076-5.549,1.554-9.796,2.583-12\r\n              c3.492,0.104,8.54,0.644,14.25,2.667c5.469,1.937,9.593,4.542,12.333,6.583c4.975-1.671,12.218-3.489,21.083-3.667\r\n              c10.135-0.203,18.344,1.819,23.667,3.583c2.616-2.336,6.987-5.648,13.167-7.917c4.489-1.648,8.518-2.229,11.5-2.417\r\n              c1.143,2.165,3.075,6.519,3.167,12.332c0.085,5.351-1.426,9.47-2.416,11.664c2.867,3.459,7.394,9.875,9.502,18.995\r\n              c0.751,3.249,4.857,20.981-6.996,36.24c-12.408,15.974-33.06,13.524-33.992,15.73c-0.932,2.206,3.964,6.297,6.266,14.877\r\n              c2.302,8.58,1.327,24.979,1.327,24.979");
			set_style(path3, "fill", "none");
			set_style(path3, "stroke", "#fff");
			set_style(path3, "stroke-linecap", "round");
			set_style(path3, "stroke-linejoin", "round");
			set_style(path3, "stroke-miterlimit", "10");
			set_style(path3, "stroke-width", "8");
			add_location(path3, file$1, 199, 12, 9011);
			attr_dev(svg2, "class", "h-12 w-12");
			attr_dev(svg2, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg2, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg2, "version", "1.1");
			attr_dev(svg2, "id", "Layer_1");
			attr_dev(svg2, "x", "0px");
			attr_dev(svg2, "y", "0px");
			attr_dev(svg2, "width", "256px");
			attr_dev(svg2, "height", "256px");
			attr_dev(svg2, "viewBox", "0 0 256 256");
			set_style(svg2, "enable-background", "new 0 0 256 256");
			attr_dev(svg2, "xml:space", "preserve");
			add_location(svg2, file$1, 172, 10, 7420);
			attr_dev(a4, "href", "https://github.com/vpassanisi?tab=repositories");
			add_location(a4, file$1, 171, 8, 7351);
			attr_dev(div6, "class", "flex flex-row");
			add_location(div6, file$1, 55, 6, 1860);
			attr_dev(div7, "class", "relative flex flex-col items-center justify-center w-11/12 md:w-1/2\r\n      max-w-lg p-8 border border-white bg-black bg-opacity-75 text-white z-10");
			add_location(div7, file$1, 26, 4, 806);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div7, anchor);
			append_dev(div7, div0);
			append_dev(div0, t0);
			append_dev(div7, t1);
			append_dev(div7, div1);
			append_dev(div1, t2);
			append_dev(div7, t3);
			append_dev(div7, div4);
			append_dev(div4, div2);
			append_dev(div2, t4);
			append_dev(div4, t5);
			append_dev(div4, div3);
			append_dev(div3, t6);
			append_dev(div7, t7);
			append_dev(div7, div5);
			append_dev(div5, a0);
			append_dev(a0, t8);
			append_dev(div5, t9);
			append_dev(div5, a1);
			append_dev(a1, t10);
			append_dev(div7, t11);
			append_dev(div7, hr);
			append_dev(div7, t12);
			append_dev(div7, div6);
			append_dev(div6, a2);
			append_dev(a2, svg0);
			append_dev(svg0, g3);
			append_dev(g3, g0);
			append_dev(g3, g2);
			append_dev(g2, g1);
			append_dev(g1, path0);
			append_dev(div6, t13);
			append_dev(div6, a3);
			append_dev(a3, svg1);
			append_dev(svg1, g7);
			append_dev(g7, g4);
			append_dev(g7, g6);
			append_dev(g6, g5);
			append_dev(g5, path1);
			append_dev(div6, t14);
			append_dev(div6, a4);
			append_dev(a4, svg2);
			append_dev(svg2, style);
			append_dev(style, t15);
			append_dev(svg2, path2);
			append_dev(svg2, path3);
		},
		i: function intro(local) {
			if (!div7_intro) {
				add_render_callback(() => {
					div7_intro = create_in_transition(div7, scale, { delay: 300, duration: 2000, start: 1.2 });
					div7_intro.start();
				});
			}
		},
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div7);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(26:2) {#if loaded}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let section;
	let if_block = /*loaded*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			section = element("section");
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { id: true, class: true, style: true });
			var section_nodes = children(section);
			if (if_block) if_block.l(section_nodes);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(section, "id", "bg");
			attr_dev(section, "class", "relative flex items-center justify-center min-h-screen bg-black\r\n  bg-cover bg-center bg-no-repeat");
			set_style(section, "background-image", "url('https://source.unsplash.com/E0AHdsENmDg')");
			add_location(section, file$1, 19, 0, 496);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			if (if_block) if_block.m(section, null);
		},
		p: function update(ctx, [dirty]) {
			if (/*loaded*/ ctx[0]) {
				if (if_block) {
					if (dirty & /*loaded*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(section, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: function intro(local) {
			transition_in(if_block);
		},
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Welcome", slots, []);
	let loaded = false;

	const getBgUrl = el => {
		const bg = el.style.backgroundImage;
		return bg.replace(/url\(['"]?(.*?)['"]?\)/i, "$1");
	};

	onMount(() => {
		var image = document.createElement("img");
		image.src = getBgUrl(document.getElementById("bg"));
		image.onload = () => $$invalidate(0, loaded = true);
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Welcome> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		fade,
		scale,
		quartInOut,
		onMount,
		loaded,
		getBgUrl
	});

	$$self.$inject_state = $$props => {
		if ("loaded" in $$props) $$invalidate(0, loaded = $$props.loaded);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [loaded];
}

class Welcome extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Welcome",
			options,
			id: create_fragment$2.name
		});
	}
}

/* src\components\About.svelte generated by Svelte v3.25.0 */

const file$2 = "src\\components\\About.svelte";

function create_fragment$3(ctx) {
	let section;
	let div4;
	let div1;
	let div0;
	let t0;
	let div3;
	let h1;
	let t1;
	let t2;
	let div2;
	let t3;

	const block = {
		c: function create() {
			section = element("section");
			div4 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = space();
			div3 = element("div");
			h1 = element("h1");
			t1 = text("About Me");
			t2 = space();
			div2 = element("div");
			t3 = text("Hi, I'm Vincent Passanisi and I am a full-stack developer currently\r\n        living in Santa Cruz, California. I recieved my bachelor's in Audio\r\n        Engineering and Technology in 2015 and began working with sound and\r\n        making music. I started to develop an interest in writing code, so I\r\n        learned HTML/CSS and JavaScript, and found myself creating web apps and\r\n        eventually transitioning from audio engineering to full time web\r\n        development. Since then, I have expanded my skills to include Go,\r\n        Python, Vue, React and much more!");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div4 = claim_element(section_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true, style: true });
			children(div0).forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t0 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", {});
			var div3_nodes = children(div3);
			h1 = claim_element(div3_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "About Me");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", {});
			var div2_nodes = children(div2);
			t3 = claim_text(div2_nodes, "Hi, I'm Vincent Passanisi and I am a full-stack developer currently\r\n        living in Santa Cruz, California. I recieved my bachelor's in Audio\r\n        Engineering and Technology in 2015 and began working with sound and\r\n        making music. I started to develop an interest in writing code, so I\r\n        learned HTML/CSS and JavaScript, and found myself creating web apps and\r\n        eventually transitioning from audio engineering to full time web\r\n        development. Since then, I have expanded my skills to include Go,\r\n        Python, Vue, React and much more!");
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "h-40 w-40 overflow-hidden rounded-full bg-right bg-cover\r\n        bg-no-repeat");
			set_style(div0, "background-image", "url('https://i.imgur.com/85VTvVu.jpg')");
			add_location(div0, file$2, 7, 6, 261);
			attr_dev(div1, "class", "mr-8");
			add_location(div1, file$2, 6, 4, 235);
			attr_dev(h1, "class", "text-5xl font-hairline");
			add_location(h1, file$2, 13, 6, 469);
			add_location(div2, file$2, 14, 6, 525);
			add_location(div3, file$2, 12, 4, 456);
			attr_dev(div4, "class", "flex flex-row items-center justify-center text-white max-w-screen-lg\r\n    w-11/12");
			add_location(div4, file$2, 3, 2, 129);
			attr_dev(section, "class", "flex flex-col items-center justify-center min-h-screen bg-dark-gray-900\r\n  border-b border-dark-gray-800");
			add_location(section, file$2, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div4);
			append_dev(div4, div1);
			append_dev(div1, div0);
			append_dev(div4, t0);
			append_dev(div4, div3);
			append_dev(div3, h1);
			append_dev(h1, t1);
			append_dev(div3, t2);
			append_dev(div3, div2);
			append_dev(div2, t3);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("About", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<About> was created with unknown prop '${key}'`);
	});

	return [];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment$3.name
		});
	}
}

/* src\components\skill.svelte generated by Svelte v3.25.0 */

const file$3 = "src\\components\\skill.svelte";

function create_fragment$4(ctx) {
	let a;
	let div0;
	let t0_value = /*skill*/ ctx[0].name + "";
	let t0;
	let t1;
	let div1;
	let div1_style_value;
	let a_href_value;

	const block = {
		c: function create() {
			a = element("a");
			div0 = element("div");
			t0 = text(t0_value);
			t1 = space();
			div1 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { class: true, href: true, target: true });
			var a_nodes = children(a);
			div0 = claim_element(a_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, t0_value);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);
			div1 = claim_element(a_nodes, "DIV", { class: true, style: true });
			children(div1).forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-center font-thin text-xl mb-2");
			add_location(div0, file$3, 9, 2, 234);
			attr_dev(div1, "class", "h-10 w-full bg-contain bg-center bg-no-repeat");
			attr_dev(div1, "style", div1_style_value = `background-image: url('${/*skill*/ ctx[0].icon}')`);
			add_location(div1, file$3, 10, 2, 304);
			attr_dev(a, "class", "bg-dark-gray-700 transition-bg-color duration-300 ease-in-out\r\n  hover:bg-dark-gray-600 border text-white p-2 m-2 rounded w-32");
			attr_dev(a, "href", a_href_value = `${/*skill*/ ctx[0].link}`);
			attr_dev(a, "target", "_blank");
			add_location(a, file$3, 4, 0, 44);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, div0);
			append_dev(div0, t0);
			append_dev(a, t1);
			append_dev(a, div1);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*skill*/ 1 && t0_value !== (t0_value = /*skill*/ ctx[0].name + "")) set_data_dev(t0, t0_value);

			if (dirty & /*skill*/ 1 && div1_style_value !== (div1_style_value = `background-image: url('${/*skill*/ ctx[0].icon}')`)) {
				attr_dev(div1, "style", div1_style_value);
			}

			if (dirty & /*skill*/ 1 && a_href_value !== (a_href_value = `${/*skill*/ ctx[0].link}`)) {
				attr_dev(a, "href", a_href_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Skill", slots, []);
	let { skill } = $$props;
	const writable_props = ["skill"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Skill> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("skill" in $$props) $$invalidate(0, skill = $$props.skill);
	};

	$$self.$capture_state = () => ({ skill });

	$$self.$inject_state = $$props => {
		if ("skill" in $$props) $$invalidate(0, skill = $$props.skill);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [skill];
}

class Skill extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, { skill: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Skill",
			options,
			id: create_fragment$4.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*skill*/ ctx[0] === undefined && !("skill" in props)) {
			console.warn("<Skill> was created without expected prop 'skill'");
		}
	}

	get skill() {
		throw new Error("<Skill>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set skill(value) {
		throw new Error("<Skill>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\components\Skills.svelte generated by Svelte v3.25.0 */
const file$4 = "src\\components\\Skills.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (13:6) {#each skills as skill}
function create_each_block(ctx) {
	let skill;
	let current;

	skill = new Skill({
			props: { skill: /*skill*/ ctx[1] },
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(skill.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(skill.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(skill, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const skill_changes = {};
			if (dirty & /*skills*/ 1) skill_changes.skill = /*skill*/ ctx[1];
			skill.$set(skill_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(skill.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(skill.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(skill, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(13:6) {#each skills as skill}",
		ctx
	});

	return block;
}

function create_fragment$5(ctx) {
	let section;
	let div1;
	let h1;
	let t0;
	let t1;
	let hr;
	let t2;
	let div0;
	let current;
	let each_value = /*skills*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			section = element("section");
			div1 = element("div");
			h1 = element("h1");
			t0 = text("Skills");
			t1 = space();
			hr = element("hr");
			t2 = space();
			div0 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div1 = claim_element(section_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h1 = claim_element(div1_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Skills");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(div1_nodes);
			hr = claim_element(div1_nodes, "HR", { class: true });
			t2 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div0_nodes);
			}

			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "text-5xl font-hairline text-white text-center");
			add_location(h1, file$4, 9, 4, 255);
			attr_dev(hr, "class", "w-1/3 mx-auto mb-8");
			add_location(hr, file$4, 10, 4, 330);
			attr_dev(div0, "class", "flex flex-wrap content-start justify-center");
			add_location(div0, file$4, 11, 4, 369);
			attr_dev(div1, "class", "flex flex-col justify-center max-w-screen-md w-11/12 mx-auto");
			add_location(div1, file$4, 8, 2, 175);
			attr_dev(section, "class", "min-h-screen bg-dark-gray-900 border-b border-dark-gray-800 pt-8");
			add_location(section, file$4, 6, 0, 86);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div1);
			append_dev(div1, h1);
			append_dev(h1, t0);
			append_dev(div1, t1);
			append_dev(div1, hr);
			append_dev(div1, t2);
			append_dev(div1, div0);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div0, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*skills*/ 1) {
				each_value = /*skills*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div0, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Skills", slots, []);
	let { skills } = $$props;
	const writable_props = ["skills"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Skills> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("skills" in $$props) $$invalidate(0, skills = $$props.skills);
	};

	$$self.$capture_state = () => ({ Skill, skills });

	$$self.$inject_state = $$props => {
		if ("skills" in $$props) $$invalidate(0, skills = $$props.skills);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [skills];
}

class Skills extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, { skills: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Skills",
			options,
			id: create_fragment$5.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*skills*/ ctx[0] === undefined && !("skills" in props)) {
			console.warn("<Skills> was created without expected prop 'skills'");
		}
	}

	get skills() {
		throw new Error("<Skills>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set skills(value) {
		throw new Error("<Skills>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\components\Project.svelte generated by Svelte v3.25.0 */
const file$5 = "src\\components\\Project.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

// (24:2) {#if hovering}
function create_if_block$1(ctx) {
	let div0;
	let a0;
	let t0;
	let a0_href_value;
	let t1;
	let a1;
	let svg;
	let g;
	let path;
	let a1_href_value;
	let div0_transition;
	let t2;
	let div1;
	let img;
	let img_src_value;
	let t3;
	let div1_transition;
	let current;
	let each_value = /*project*/ ctx[0].techs;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div0 = element("div");
			a0 = element("a");
			t0 = text("Go To Project");
			t1 = space();
			a1 = element("a");
			svg = svg_element("svg");
			g = svg_element("g");
			path = svg_element("path");
			t2 = space();
			div1 = element("div");
			img = element("img");
			t3 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			a0 = claim_element(div0_nodes, "A", { class: true, href: true });
			var a0_nodes = children(a0);
			t0 = claim_text(a0_nodes, "Go To Project");
			a0_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			a1 = claim_element(div0_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);

			svg = claim_element(
				a1_nodes,
				"svg",
				{
					class: true,
					xmlns: true,
					"xmlns:xlink": true,
					width: true,
					height: true,
					viewBox: true,
					version: true
				},
				1
			);

			var svg_nodes = children(svg);
			g = claim_element(svg_nodes, "g", { id: true }, 1);
			var g_nodes = children(g);
			path = claim_element(g_nodes, "path", { style: true, d: true }, 1);
			children(path).forEach(detach_dev);
			g_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			img = claim_element(div1_nodes, "IMG", { class: true, src: true, alt: true });
			t3 = claim_space(div1_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div1_nodes);
			}

			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a0, "class", "flex items-center justify-center w-3/4 h-full hover:bg-gray-800\r\n        transition-bg-color duration-300 ease-in-out");
			attr_dev(a0, "href", a0_href_value = /*project*/ ctx[0].url);
			add_location(a0, file$5, 28, 6, 929);
			set_style(path, "stroke", "none");
			set_style(path, "fill", "rgb(100%,100%,100%)");
			set_style(path, "fill-opacity", "1");
			attr_dev(path, "d", "M 120 1.921875 C 54.789062 1.921875 1.921875 54.789062 1.921875\r\n              120 C 1.921875 175.332031 40.019531 221.628906 91.386719 234.4375\r\n              C 90.835938 232.84375 90.480469 230.996094 90.480469 228.703125 L\r\n              90.480469 208.519531 C 85.6875 208.519531 77.660156 208.519531\r\n              75.640625 208.519531 C 67.5625 208.519531 60.378906 205.046875\r\n              56.894531 198.59375 C 53.027344 191.417969 52.359375 180.445312\r\n              42.777344 173.734375 C 39.933594 171.503906 42.097656 168.953125\r\n              45.375 169.296875 C 51.425781 171.011719 56.445312 175.164062\r\n              61.167969 181.324219 C 65.871094 187.492188 68.085938 188.890625\r\n              76.871094 188.890625 C 81.132812 188.890625 87.507812 188.644531\r\n              93.511719 187.699219 C 96.738281 179.503906 102.316406 171.957031\r\n              109.136719 168.394531 C 69.816406 164.347656 51.050781 144.785156\r\n              51.050781 118.230469 C 51.050781 106.792969 55.921875 95.734375\r\n              64.199219 86.417969 C 61.480469 77.167969 58.066406 58.304688\r\n              65.242188 51.121094 C 82.933594 51.121094 93.628906 62.59375\r\n              96.195312 65.691406 C 105.015625 62.671875 114.695312 60.960938\r\n              124.871094 60.960938 C 135.066406 60.960938 144.785156 62.671875\r\n              153.625 65.710938 C 156.160156 62.632812 166.867188 51.121094\r\n              184.597656 51.121094 C 191.800781 58.3125 188.347656 77.253906\r\n              185.601562 86.484375 C 193.828125 95.785156 198.671875 106.8125\r\n              198.671875 118.230469 C 198.671875 144.765625 179.933594\r\n              164.320312 140.671875 168.382812 C 151.476562 174.023438\r\n              159.359375 189.863281 159.359375 201.800781 L 159.359375\r\n              228.703125 C 159.359375 229.726562 159.132812 230.464844\r\n              159.015625 231.339844 C 205.027344 215.210938 238.078125\r\n              171.523438 238.078125 120 C 238.078125 54.789062 185.210938\r\n              1.921875 120 1.921875 Z M 120 1.921875 ");
			add_location(path, file$5, 47, 12, 1639);
			attr_dev(g, "id", "surface591329");
			add_location(g, file$5, 46, 10, 1603);
			attr_dev(svg, "class", "fill-current h-full w-full");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg, "width", "240pt");
			attr_dev(svg, "height", "240pt");
			attr_dev(svg, "viewBox", "0 0 240 240");
			attr_dev(svg, "version", "1.1");
			add_location(svg, file$5, 38, 8, 1331);
			attr_dev(a1, "href", a1_href_value = /*project*/ ctx[0].github);
			attr_dev(a1, "class", "w-1/4 hover:bg-gray-800 transition-bg-color duration-300\r\n        ease-in-out h-full bg-contain bg-center bg-no-repeat p-1 border-l");
			add_location(a1, file$5, 34, 6, 1138);
			attr_dev(div0, "class", "absolute bottom-0 flex flex-row items-center justify-center w-full\r\n      text-center bg-gray-900 text-xl font-thin border-t h-12 z-10");
			add_location(div0, file$5, 24, 4, 722);
			attr_dev(img, "class", "block h-12");
			if (img.src !== (img_src_value = /*project*/ ctx[0].overlayIcon)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "");
			add_location(img, file$5, 84, 6, 4040);
			attr_dev(div1, "class", "flex flex-wrap justify-center content-start absolute inset-0 h-full\r\n      w-full bg-black bg-opacity-75 p-2");
			add_location(div1, file$5, 80, 4, 3860);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div0, anchor);
			append_dev(div0, a0);
			append_dev(a0, t0);
			append_dev(div0, t1);
			append_dev(div0, a1);
			append_dev(a1, svg);
			append_dev(svg, g);
			append_dev(g, path);
			insert_dev(target, t2, anchor);
			insert_dev(target, div1, anchor);
			append_dev(div1, img);
			append_dev(div1, t3);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div1, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (!current || dirty & /*project*/ 1 && a0_href_value !== (a0_href_value = /*project*/ ctx[0].url)) {
				attr_dev(a0, "href", a0_href_value);
			}

			if (!current || dirty & /*project*/ 1 && a1_href_value !== (a1_href_value = /*project*/ ctx[0].github)) {
				attr_dev(a1, "href", a1_href_value);
			}

			if (!current || dirty & /*project*/ 1 && img.src !== (img_src_value = /*project*/ ctx[0].overlayIcon)) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*project*/ 1) {
				each_value = /*project*/ ctx[0].techs;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!div0_transition) div0_transition = create_bidirectional_transition(div0, slide, { duration: 500 }, true);
				div0_transition.run(1);
			});

			add_render_callback(() => {
				if (!div1_transition) div1_transition = create_bidirectional_transition(div1, fade, { duration: 500 }, true);
				div1_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!div0_transition) div0_transition = create_bidirectional_transition(div0, slide, { duration: 500 }, false);
			div0_transition.run(0);
			if (!div1_transition) div1_transition = create_bidirectional_transition(div1, fade, { duration: 500 }, false);
			div1_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			if (detaching && div0_transition) div0_transition.end();
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(div1);
			destroy_each(each_blocks, detaching);
			if (detaching && div1_transition) div1_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(24:2) {#if hovering}",
		ctx
	});

	return block;
}

// (86:6) {#each project.techs as tech}
function create_each_block$1(ctx) {
	let a;
	let t0_value = /*tech*/ ctx[4].name + "";
	let t0;
	let t1;
	let a_href_value;

	const block = {
		c: function create() {
			a = element("a");
			t0 = text(t0_value);
			t1 = space();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			t0 = claim_text(a_nodes, t0_value);
			t1 = claim_space(a_nodes);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "class", "=text-white p-2 text-lg font-thin h-min-content");
			attr_dev(a, "href", a_href_value = /*tech*/ ctx[4].link);
			add_location(a, file$5, 86, 8, 4146);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, t0);
			append_dev(a, t1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*project*/ 1 && t0_value !== (t0_value = /*tech*/ ctx[4].name + "")) set_data_dev(t0, t0_value);

			if (dirty & /*project*/ 1 && a_href_value !== (a_href_value = /*tech*/ ctx[4].link)) {
				attr_dev(a, "href", a_href_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$1.name,
		type: "each",
		source: "(86:6) {#each project.techs as tech}",
		ctx
	});

	return block;
}

function create_fragment$6(ctx) {
	let div2;
	let div0;
	let div0_style_value;
	let t0;
	let div1;
	let t1_value = /*project*/ ctx[0].name + "";
	let t1;
	let t2;
	let current;
	let mounted;
	let dispose;
	let if_block = /*hovering*/ ctx[1] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			t1 = text(t1_value);
			t2 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true, style: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, t1_value);
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			if (if_block) if_block.l(div2_nodes);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "relative h-full w-full bg-cover bg-center bg-no-repeat\r\n    transition-filter duration-500 ease-in-out");
			attr_dev(div0, "style", div0_style_value = `background-image: url('${/*project*/ ctx[0].background}')`);
			toggle_class(div0, "blur", /*hovering*/ ctx[1]);
			add_location(div0, file$5, 13, 2, 324);
			attr_dev(div1, "class", "absolute bottom-0 flex items-center justify-center w-full text-center\r\n    bg-gray-900 text-xl font-thin h-12");
			add_location(div1, file$5, 18, 2, 540);
			attr_dev(div2, "class", "relative text-white w-full md:w-1/2 h-56 border-4 border-dark-gray-900\r\n  overflow-hidden");
			add_location(div2, file$5, 8, 0, 127);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div2, t0);
			append_dev(div2, div1);
			append_dev(div1, t1);
			append_dev(div2, t2);
			if (if_block) if_block.m(div2, null);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(div2, "mouseenter", /*mouseenter_handler*/ ctx[2], false, false, false),
					listen_dev(div2, "mouseleave", /*mouseleave_handler*/ ctx[3], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*project*/ 1 && div0_style_value !== (div0_style_value = `background-image: url('${/*project*/ ctx[0].background}')`)) {
				attr_dev(div0, "style", div0_style_value);
			}

			if (dirty & /*hovering*/ 2) {
				toggle_class(div0, "blur", /*hovering*/ ctx[1]);
			}

			if ((!current || dirty & /*project*/ 1) && t1_value !== (t1_value = /*project*/ ctx[0].name + "")) set_data_dev(t1, t1_value);

			if (/*hovering*/ ctx[1]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*hovering*/ 2) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div2, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			if (if_block) if_block.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Project", slots, []);
	let { project } = $$props;
	let hovering = false;
	const writable_props = ["project"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Project> was created with unknown prop '${key}'`);
	});

	const mouseenter_handler = () => $$invalidate(1, hovering = true);
	const mouseleave_handler = () => $$invalidate(1, hovering = false);

	$$self.$$set = $$props => {
		if ("project" in $$props) $$invalidate(0, project = $$props.project);
	};

	$$self.$capture_state = () => ({ slide, fade, project, hovering });

	$$self.$inject_state = $$props => {
		if ("project" in $$props) $$invalidate(0, project = $$props.project);
		if ("hovering" in $$props) $$invalidate(1, hovering = $$props.hovering);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [project, hovering, mouseenter_handler, mouseleave_handler];
}

class Project extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, { project: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Project",
			options,
			id: create_fragment$6.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*project*/ ctx[0] === undefined && !("project" in props)) {
			console.warn("<Project> was created without expected prop 'project'");
		}
	}

	get project() {
		throw new Error("<Project>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set project(value) {
		throw new Error("<Project>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\components\Projects.svelte generated by Svelte v3.25.0 */
const file$6 = "src\\components\\Projects.svelte";

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[8] = list[i];
	return child_ctx;
}

function get_each_context$2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[8] = list[i];
	return child_ctx;
}

// (52:46) 
function create_if_block_1(ctx) {
	let div;
	let div_transition;
	let current;
	let mounted;
	let dispose;
	let each_value_1 = /*frontend*/ ctx[1];
	validate_each_argument(each_value_1);
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "flex flex-wrap");
			add_location(div, file$6, 52, 6, 1712);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;

			if (!mounted) {
				dispose = listen_dev(div, "outroend", /*outroend_handler_1*/ ctx[7], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*frontend*/ 2) {
				each_value_1 = /*frontend*/ ctx[1];
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value_1.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_1.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			add_render_callback(() => {
				if (!div_transition) div_transition = create_bidirectional_transition(div, fade, { duration: 500, easing: quartInOut }, true);
				div_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			if (!div_transition) div_transition = create_bidirectional_transition(div, fade, { duration: 500, easing: quartInOut }, false);
			div_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
			if (detaching && div_transition) div_transition.end();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(52:46) ",
		ctx
	});

	return block;
}

// (43:4) {#if selected === 'fullstack' && show}
function create_if_block$2(ctx) {
	let div;
	let div_transition;
	let current;
	let mounted;
	let dispose;
	let each_value = /*fullstack*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "flex flex-wrap");
			add_location(div, file$6, 43, 6, 1409);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;

			if (!mounted) {
				dispose = listen_dev(div, "outroend", /*outroend_handler*/ ctx[6], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*fullstack*/ 1) {
				each_value = /*fullstack*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$2(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block$2(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			add_render_callback(() => {
				if (!div_transition) div_transition = create_bidirectional_transition(div, fade, { duration: 500, easing: quartInOut }, true);
				div_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			if (!div_transition) div_transition = create_bidirectional_transition(div, fade, { duration: 500, easing: quartInOut }, false);
			div_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
			if (detaching && div_transition) div_transition.end();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$2.name,
		type: "if",
		source: "(43:4) {#if selected === 'fullstack' && show}",
		ctx
	});

	return block;
}

// (57:8) {#each frontend as project}
function create_each_block_1(ctx) {
	let project;
	let current;

	project = new Project({
			props: { project: /*project*/ ctx[8] },
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(project.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(project.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(project, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const project_changes = {};
			if (dirty & /*frontend*/ 2) project_changes.project = /*project*/ ctx[8];
			project.$set(project_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(project.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(project.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(project, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(57:8) {#each frontend as project}",
		ctx
	});

	return block;
}

// (48:8) {#each fullstack as project}
function create_each_block$2(ctx) {
	let project;
	let current;

	project = new Project({
			props: { project: /*project*/ ctx[8] },
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(project.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(project.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(project, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const project_changes = {};
			if (dirty & /*fullstack*/ 1) project_changes.project = /*project*/ ctx[8];
			project.$set(project_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(project.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(project.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(project, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$2.name,
		type: "each",
		source: "(48:8) {#each fullstack as project}",
		ctx
	});

	return block;
}

function create_fragment$7(ctx) {
	let section;
	let div0;
	let t0;
	let t1;
	let hr;
	let t2;
	let div2;
	let div1;
	let button0;
	let t3;
	let t4;
	let button1;
	let t5;
	let t6;
	let current_block_type_index;
	let if_block;
	let current;
	let mounted;
	let dispose;
	const if_block_creators = [create_if_block$2, create_if_block_1];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*selected*/ ctx[2] === "fullstack" && /*show*/ ctx[3]) return 0;
		if (/*selected*/ ctx[2] === "frontend" && /*show*/ ctx[3]) return 1;
		return -1;
	}

	if (~(current_block_type_index = select_block_type(ctx))) {
		if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	}

	const block = {
		c: function create() {
			section = element("section");
			div0 = element("div");
			t0 = text("Projects");
			t1 = space();
			hr = element("hr");
			t2 = space();
			div2 = element("div");
			div1 = element("div");
			button0 = element("button");
			t3 = text("Full Stack");
			t4 = space();
			button1 = element("button");
			t5 = text("Frontend");
			t6 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div0 = claim_element(section_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Projects");
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			hr = claim_element(section_nodes, "HR", { class: true });
			t2 = claim_space(section_nodes);
			div2 = claim_element(section_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			button0 = claim_element(div1_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t3 = claim_text(button0_nodes, "Full Stack");
			button0_nodes.forEach(detach_dev);
			t4 = claim_space(div1_nodes);
			button1 = claim_element(div1_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t5 = claim_text(button1_nodes, "Frontend");
			button1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t6 = claim_space(div2_nodes);
			if (if_block) if_block.l(div2_nodes);
			div2_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-5xl font-hairline text-white text-center");
			add_location(div0, file$6, 14, 2, 351);
			attr_dev(hr, "class", "mx-auto w-1/5 mb-4");
			add_location(hr, file$6, 15, 2, 428);
			attr_dev(button0, "class", "text-gray-600 text-xl font-thin h-full px-4 focus:outline-none\r\n        transition-text-color duration-500 ease-in-out");
			toggle_class(button0, "text-white", /*selected*/ ctx[2] === "fullstack");
			add_location(button0, file$6, 18, 6, 576);
			attr_dev(button1, "class", "text-gray-600 text-xl font-thin h-full px-4 focus:outline-none\r\n        transition-text-color duration-500 ease-in-out");
			toggle_class(button1, "text-white", /*selected*/ ctx[2] === "frontend");
			add_location(button1, file$6, 29, 6, 966);
			attr_dev(div1, "class", "w-full flex flex-row items-center justify-center mb-4");
			add_location(div1, file$6, 17, 4, 501);
			attr_dev(div2, "class", "max-w-lg mx-auto");
			add_location(div2, file$6, 16, 2, 465);
			attr_dev(section, "class", "min-h-screen bg-dark-gray-900 pt-8 border-b border-dark-gray-800");
			add_location(section, file$6, 12, 0, 262);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div0);
			append_dev(div0, t0);
			append_dev(section, t1);
			append_dev(section, hr);
			append_dev(section, t2);
			append_dev(section, div2);
			append_dev(div2, div1);
			append_dev(div1, button0);
			append_dev(button0, t3);
			append_dev(div1, t4);
			append_dev(div1, button1);
			append_dev(button1, t5);
			append_dev(div2, t6);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].m(div2, null);
			}

			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*click_handler*/ ctx[4], false, false, false),
					listen_dev(button1, "click", /*click_handler_1*/ ctx[5], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*selected*/ 4) {
				toggle_class(button0, "text-white", /*selected*/ ctx[2] === "fullstack");
			}

			if (dirty & /*selected*/ 4) {
				toggle_class(button1, "text-white", /*selected*/ ctx[2] === "frontend");
			}

			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if (~current_block_type_index) {
					if_blocks[current_block_type_index].p(ctx, dirty);
				}
			} else {
				if (if_block) {
					group_outros();

					transition_out(if_blocks[previous_block_index], 1, 1, () => {
						if_blocks[previous_block_index] = null;
					});

					check_outros();
				}

				if (~current_block_type_index) {
					if_block = if_blocks[current_block_type_index];

					if (!if_block) {
						if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
						if_block.c();
					}

					transition_in(if_block, 1);
					if_block.m(div2, null);
				} else {
					if_block = null;
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].d();
			}

			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$7($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Projects", slots, []);
	let { fullstack } = $$props;
	let { frontend } = $$props;
	let selected = "fullstack";
	let show = true;
	const writable_props = ["fullstack", "frontend"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Projects> was created with unknown prop '${key}'`);
	});

	const click_handler = () => {
		if (selected === "fullstack") return;
		$$invalidate(2, selected = "fullstack");
		$$invalidate(3, show = false);
	};

	const click_handler_1 = () => {
		if (selected === "frontend") return;
		$$invalidate(2, selected = "frontend");
		$$invalidate(3, show = false);
	};

	const outroend_handler = () => $$invalidate(3, show = true);
	const outroend_handler_1 = () => $$invalidate(3, show = true);

	$$self.$$set = $$props => {
		if ("fullstack" in $$props) $$invalidate(0, fullstack = $$props.fullstack);
		if ("frontend" in $$props) $$invalidate(1, frontend = $$props.frontend);
	};

	$$self.$capture_state = () => ({
		fade,
		quartInOut,
		Project,
		fullstack,
		frontend,
		selected,
		show
	});

	$$self.$inject_state = $$props => {
		if ("fullstack" in $$props) $$invalidate(0, fullstack = $$props.fullstack);
		if ("frontend" in $$props) $$invalidate(1, frontend = $$props.frontend);
		if ("selected" in $$props) $$invalidate(2, selected = $$props.selected);
		if ("show" in $$props) $$invalidate(3, show = $$props.show);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		fullstack,
		frontend,
		selected,
		show,
		click_handler,
		click_handler_1,
		outroend_handler,
		outroend_handler_1
	];
}

class Projects extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, { fullstack: 0, frontend: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Projects",
			options,
			id: create_fragment$7.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*fullstack*/ ctx[0] === undefined && !("fullstack" in props)) {
			console.warn("<Projects> was created without expected prop 'fullstack'");
		}

		if (/*frontend*/ ctx[1] === undefined && !("frontend" in props)) {
			console.warn("<Projects> was created without expected prop 'frontend'");
		}
	}

	get fullstack() {
		throw new Error("<Projects>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set fullstack(value) {
		throw new Error("<Projects>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get frontend() {
		throw new Error("<Projects>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set frontend(value) {
		throw new Error("<Projects>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\components\Contact.svelte generated by Svelte v3.25.0 */

const file$7 = "src\\components\\Contact.svelte";

function create_fragment$8(ctx) {
	let section;
	let div8;
	let div0;
	let t0;
	let t1;
	let hr;
	let t2;
	let div7;
	let div1;
	let t3;
	let a0;
	let t4;
	let t5;
	let div6;
	let div2;
	let t6;
	let t7;
	let div3;
	let t8;
	let t9;
	let div4;
	let t10;
	let t11;
	let div5;
	let a1;
	let svg0;
	let g3;
	let g0;
	let g2;
	let g1;
	let path0;
	let t12;
	let a2;
	let svg1;
	let g7;
	let g4;
	let g6;
	let g5;
	let path1;
	let t13;
	let a3;
	let svg2;
	let style;
	let t14;
	let path2;
	let path3;
	let t15;
	let a4;
	let t16;

	const block = {
		c: function create() {
			section = element("section");
			div8 = element("div");
			div0 = element("div");
			t0 = text("Contact Me");
			t1 = space();
			hr = element("hr");
			t2 = space();
			div7 = element("div");
			div1 = element("div");
			t3 = text("Send me and email at\r\n        ");
			a0 = element("a");
			t4 = text("vpassanisi@gmail.com");
			t5 = space();
			div6 = element("div");
			div2 = element("div");
			t6 = text("Phone");
			t7 = space();
			div3 = element("div");
			t8 = text("831-227-6421");
			t9 = space();
			div4 = element("div");
			t10 = text("Social");
			t11 = space();
			div5 = element("div");
			a1 = element("a");
			svg0 = svg_element("svg");
			g3 = svg_element("g");
			g0 = svg_element("g");
			g2 = svg_element("g");
			g1 = svg_element("g");
			path0 = svg_element("path");
			t12 = space();
			a2 = element("a");
			svg1 = svg_element("svg");
			g7 = svg_element("g");
			g4 = svg_element("g");
			g6 = svg_element("g");
			g5 = svg_element("g");
			path1 = svg_element("path");
			t13 = space();
			a3 = element("a");
			svg2 = svg_element("svg");
			style = svg_element("style");
			t14 = text(".st0 {\n  fill: none;\n  stroke: #fff;\n  stroke-width: 8;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 10;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL0NvbnRhY3Quc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNnQjtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1osZUFBZTtFQUNmLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL0NvbnRhY3Quc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbiAgICAgICAgICAgICAgICAuc3QwIHtcclxuICAgICAgICAgICAgICAgICAgZmlsbDogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgc3Ryb2tlOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgICBzdHJva2Utd2lkdGg6IDg7XHJcbiAgICAgICAgICAgICAgICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcclxuICAgICAgICAgICAgICAgICAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDtcclxuICAgICAgICAgICAgICAgICAgc3Ryb2tlLW1pdGVybGltaXQ6IDEwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICJdfQ== */");
			path2 = svg_element("path");
			path3 = svg_element("path");
			t15 = space();
			a4 = element("a");
			t16 = text("View my resume");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div8 = claim_element(section_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div0 = claim_element(div8_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Contact Me");
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div8_nodes);
			hr = claim_element(div8_nodes, "HR", { class: true });
			t2 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div1 = claim_element(div7_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t3 = claim_text(div1_nodes, "Send me and email at\r\n        ");
			a0 = claim_element(div1_nodes, "A", { class: true, href: true, target: true });
			var a0_nodes = children(a0);
			t4 = claim_text(a0_nodes, "vpassanisi@gmail.com");
			a0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div2 = claim_element(div6_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			t6 = claim_text(div2_nodes, "Phone");
			div2_nodes.forEach(detach_dev);
			t7 = claim_space(div6_nodes);
			div3 = claim_element(div6_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			t8 = claim_text(div3_nodes, "831-227-6421");
			div3_nodes.forEach(detach_dev);
			t9 = claim_space(div6_nodes);
			div4 = claim_element(div6_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			t10 = claim_text(div4_nodes, "Social");
			div4_nodes.forEach(detach_dev);
			t11 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			a1 = claim_element(div5_nodes, "A", { class: true, href: true, target: true });
			var a1_nodes = children(a1);

			svg0 = claim_element(
				a1_nodes,
				"svg",
				{
					class: true,
					viewBox: true,
					xmlns: true,
					"xmlns:xlink": true,
					"xmlns:sketch": true
				},
				1
			);

			var svg0_nodes = children(svg0);

			g3 = claim_element(
				svg0_nodes,
				"g",
				{
					stroke: true,
					"stroke-width": true,
					fill: true,
					"fill-rule": true,
					"sketch:type": true
				},
				1
			);

			var g3_nodes = children(g3);
			g0 = claim_element(g3_nodes, "g", { "sketch:type": true, transform: true }, 1);
			children(g0).forEach(detach_dev);

			g2 = claim_element(
				g3_nodes,
				"g",
				{
					"sketch:type": true,
					transform: true,
					stroke: true,
					"stroke-width": true
				},
				1
			);

			var g2_nodes = children(g2);
			g1 = claim_element(g2_nodes, "g", { transform: true, "sketch:type": true }, 1);
			var g1_nodes = children(g1);
			path0 = claim_element(g1_nodes, "path", { d: true, id: true }, 1);
			children(path0).forEach(detach_dev);
			g1_nodes.forEach(detach_dev);
			g2_nodes.forEach(detach_dev);
			g3_nodes.forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			t12 = claim_space(div5_nodes);
			a2 = claim_element(div5_nodes, "A", { class: true, href: true, target: true });
			var a2_nodes = children(a2);

			svg1 = claim_element(
				a2_nodes,
				"svg",
				{
					class: true,
					viewBox: true,
					xmlns: true,
					"xmlns:xlink": true,
					"xmlns:sketch": true
				},
				1
			);

			var svg1_nodes = children(svg1);

			g7 = claim_element(
				svg1_nodes,
				"g",
				{
					stroke: true,
					"stroke-width": true,
					fill: true,
					"fill-rule": true,
					"sketch:type": true
				},
				1
			);

			var g7_nodes = children(g7);
			g4 = claim_element(g7_nodes, "g", { "sketch:type": true }, 1);
			children(g4).forEach(detach_dev);

			g6 = claim_element(
				g7_nodes,
				"g",
				{
					"sketch:type": true,
					transform: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true
				},
				1
			);

			var g6_nodes = children(g6);
			g5 = claim_element(g6_nodes, "g", { transform: true, "sketch:type": true }, 1);
			var g5_nodes = children(g5);
			path1 = claim_element(g5_nodes, "path", { d: true, id: true }, 1);
			children(path1).forEach(detach_dev);
			g5_nodes.forEach(detach_dev);
			g6_nodes.forEach(detach_dev);
			g7_nodes.forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			a2_nodes.forEach(detach_dev);
			t13 = claim_space(div5_nodes);
			a3 = claim_element(div5_nodes, "A", { class: true, href: true, target: true });
			var a3_nodes = children(a3);

			svg2 = claim_element(
				a3_nodes,
				"svg",
				{
					class: true,
					xmlns: true,
					"xmlns:xlink": true,
					version: true,
					x: true,
					y: true,
					viewBox: true,
					style: true,
					"xml:space": true
				},
				1
			);

			var svg2_nodes = children(svg2);
			style = claim_element(svg2_nodes, "style", { type: true }, 1);
			var style_nodes = children(style);
			t14 = claim_text(style_nodes, ".st0 {\n  fill: none;\n  stroke: #fff;\n  stroke-width: 8;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 10;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL0NvbnRhY3Quc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNnQjtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1osZUFBZTtFQUNmLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL0NvbnRhY3Quc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbiAgICAgICAgICAgICAgICAuc3QwIHtcclxuICAgICAgICAgICAgICAgICAgZmlsbDogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgc3Ryb2tlOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgICBzdHJva2Utd2lkdGg6IDg7XHJcbiAgICAgICAgICAgICAgICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcclxuICAgICAgICAgICAgICAgICAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDtcclxuICAgICAgICAgICAgICAgICAgc3Ryb2tlLW1pdGVybGltaXQ6IDEwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICJdfQ== */");
			style_nodes.forEach(detach_dev);
			path2 = claim_element(svg2_nodes, "path", { class: true, d: true, style: true }, 1);
			children(path2).forEach(detach_dev);
			path3 = claim_element(svg2_nodes, "path", { class: true, d: true, style: true }, 1);
			children(path3).forEach(detach_dev);
			svg2_nodes.forEach(detach_dev);
			a3_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t15 = claim_space(div6_nodes);
			a4 = claim_element(div6_nodes, "A", { class: true, href: true, target: true });
			var a4_nodes = children(a4);
			t16 = claim_text(a4_nodes, "View my resume");
			a4_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-5xl font-hairline text-center");
			add_location(div0, file$7, 4, 4, 136);
			attr_dev(hr, "class", "w-1/5 mx-auto mb-8");
			add_location(hr, file$7, 5, 4, 206);
			attr_dev(a0, "class", "font-light underline ml-2");
			attr_dev(a0, "href", "mailto:vpassanisi@gmail.com");
			attr_dev(a0, "target", "_blank");
			add_location(a0, file$7, 9, 8, 417);
			attr_dev(div1, "class", "flex items-center justify-center p-4 font-thin text-lg");
			add_location(div1, file$7, 7, 6, 309);
			attr_dev(div2, "class", "text-lg font-thin");
			add_location(div2, file$7, 18, 8, 704);
			attr_dev(div3, "class", "mb-4");
			add_location(div3, file$7, 19, 8, 756);
			attr_dev(div4, "class", "text-lg font-thin");
			add_location(div4, file$7, 20, 8, 802);
			attr_dev(g0, "sketch:type", "MSLayerGroup");
			attr_dev(g0, "transform", "translate(-720.000000, 0.000000)");
			add_location(g0, file$7, 38, 16, 1517);
			attr_dev(path0, "d", "M35.9955151,27.6266598 C35.9955151,23.8394326\r\n                      33.0511715,20.8297982 29.7726613,20.8297982\r\n                      C27.2676024,20.8297982 25.0529201,20.8297982\r\n                      23.5815904,23.9999995 C23.3099556,24.5852775\r\n                      22.9955155,26.2895184 22.9955155,27.1324171\r\n                      L22.9955155,43.4999995 L15.036777,43.4999989\r\n                      L15.0367767,22.7102582 L15.0367767,12.455873\r\n                      L23.3012671,12.455873 L23.7089346,16.5 L23.8873426,16.5\r\n                      C25.0805776,14.5783603 27.7924258,12.455873\r\n                      32.6850041,12.455873 C38.6490801,12.455873\r\n                      43.9955153,17.1766025 43.9955153,25.8297979\r\n                      L43.9955153,43.4999995 L35.9955151,43.4999995\r\n                      L35.9955151,27.6266598 Z M4.32081087,8.76648024\r\n                      C1.71699591,8.76648024 0.036776724,6.92405932\r\n                      0.036776724,4.64751022 C0.036776724,2.3156217\r\n                      1.7713812,0.525677812 4.42767319,0.525677812\r\n                      C7.08396519,0.525677812 8.71170734,2.31466757\r\n                      8.76609263,4.64751022 C8.76704675,6.92405932\r\n                      7.08491932,8.76648024 4.32081087,8.76648024\r\n                      L4.32081087,8.76648024 Z M0.995515537,43.4999995\r\n                      L0.995515303,12.4558734 L7.98371812,12.4558737\r\n                      L7.98371835,43.4999999 L0.995515537,43.4999995 Z");
			attr_dev(path0, "id", "Shape");
			add_location(path0, file$7, 49, 20, 1990);
			attr_dev(g1, "transform", "translate(725.004485, 5.500000)");
			attr_dev(g1, "sketch:type", "MSShapeGroup");
			add_location(g1, file$7, 46, 18, 1852);
			attr_dev(g2, "sketch:type", "MSLayerGroup");
			attr_dev(g2, "transform", "translate(-716.000000, 1.000000)");
			attr_dev(g2, "stroke", "#fff");
			attr_dev(g2, "stroke-width", "2");
			add_location(g2, file$7, 41, 16, 1650);
			attr_dev(g3, "stroke", "none");
			attr_dev(g3, "stroke-width", "1");
			attr_dev(g3, "fill", "none");
			attr_dev(g3, "fill-rule", "evenodd");
			attr_dev(g3, "sketch:type", "MSPage");
			add_location(g3, file$7, 32, 14, 1327);
			attr_dev(svg0, "class", "h-full");
			attr_dev(svg0, "viewBox", "0 0 60 60");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg0, "xmlns:sketch", "http://www.bohemiancoding.com/sketch/ns");
			add_location(svg0, file$7, 26, 12, 1063);
			attr_dev(a1, "class", "h-full mr-1");
			attr_dev(a1, "href", "https://www.linkedin.com/in/vinny-passanisi-7a9966b8/");
			attr_dev(a1, "target", "_blank");
			add_location(a1, file$7, 22, 10, 910);
			attr_dev(g4, "sketch:type", "MSLayerGroup");
			add_location(g4, file$7, 94, 16, 4256);
			attr_dev(path1, "d", "M45.710328,7.26461023 C45.710328,7.26461023\r\n                      49.7891594,6.93752192 51.4260032,5.69777149\r\n                      C51.4260032,5.69777149 51.0336919,7.12495455\r\n                      46.1255745,11.6404882 C46.1255745,11.6404882\r\n                      47.7781108,36.0055044 22.5977549,41.9727222\r\n                      C22.5977549,41.9727222 9.82771721,44.7413348\r\n                      0.573996756,37.6789225 C0.573996756,37.6789225\r\n                      10.2610704,39.4282937 15.711181,33.3103948\r\n                      C15.711181,33.3103948 8.68096083,33.3826727\r\n                      6.45746056,26.1034266 C6.45746056,26.1034266\r\n                      9.11189981,26.6853253 10.6895952,25.9576457\r\n                      C10.6895952,25.9576457 2.72627742,24.2817775\r\n                      2.86992375,15.4724441 C2.86992375,15.4724441\r\n                      5.02220441,17.0748093 6.95841203,16.7832475\r\n                      C6.95841203,16.7832475 -0.214247369,10.5930706\r\n                      4.23275317,2.87770677 C4.23275317,2.87770677\r\n                      13.8437788,14.411551 25.7555598,13.7267481\r\n                      C25.5479366,12.9010645 25.4356751,12.0361793\r\n                      25.4356751,11.141893 C25.4356751,5.40743468\r\n                      30.0190793,0.755920455 35.6719848,0.755920455\r\n                      C38.5280117,0.755920455 41.1112314,1.94421879\r\n                      42.9689767,3.85897169 C44.330599,3.88224763\r\n                      47.1310988,3.63601262 49.9279773,1.60365494\r\n                      C49.9279773,1.60487999 50.0885232,3.82589534\r\n                      45.710328,7.26461023 L45.710328,7.26461023 Z");
			attr_dev(path1, "id", "Shape");
			add_location(path1, file$7, 105, 20, 4727);
			attr_dev(g5, "transform", "translate(0.000000, 10.000000)");
			attr_dev(g5, "sketch:type", "MSShapeGroup");
			add_location(g5, file$7, 102, 18, 4590);
			attr_dev(g6, "sketch:type", "MSLayerGroup");
			attr_dev(g6, "transform", "translate(4.000000, 1.000000)");
			attr_dev(g6, "stroke", "#fff");
			attr_dev(g6, "stroke-width", "2");
			attr_dev(g6, "stroke-linecap", "round");
			attr_dev(g6, "stroke-linejoin", "round");
			add_location(g6, file$7, 95, 16, 4306);
			attr_dev(g7, "stroke", "none");
			attr_dev(g7, "stroke-width", "1");
			attr_dev(g7, "fill", "none");
			attr_dev(g7, "fill-rule", "evenodd");
			attr_dev(g7, "sketch:type", "MSPage");
			add_location(g7, file$7, 88, 14, 4066);
			attr_dev(svg1, "class", "h-full");
			attr_dev(svg1, "viewBox", "0 0 60 60");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg1, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg1, "xmlns:sketch", "http://www.bohemiancoding.com/sketch/ns");
			add_location(svg1, file$7, 82, 12, 3802);
			attr_dev(a2, "class", "h-full mr-1");
			attr_dev(a2, "href", "https://twitter.com/VinnyPassanisi");
			attr_dev(a2, "target", "_blank");
			add_location(a2, file$7, 78, 10, 3668);
			attr_dev(style, "type", "text/css");
			add_location(style, file$7, 151, 14, 7086);
			attr_dev(path2, "class", "st0");
			attr_dev(path2, "d", "M128.1,222.073");
			set_style(path2, "fill", "none");
			set_style(path2, "stroke", "#fff");
			set_style(path2, "stroke-linecap", "round");
			set_style(path2, "stroke-linejoin", "round");
			set_style(path2, "stroke-miterlimit", "10");
			set_style(path2, "stroke-width", "8");
			add_location(path2, file$7, 160, 14, 8044);
			attr_dev(path3, "class", "st0");
			attr_dev(path3, "d", "M130.164,226.986c63.917-3.557,108.667-52.057,97.259-116.5c-9.288-52.47-60.722-87.613-112.739-80.577\r\n                C61.952,37.041,21.39,85.877,27.386,139.004c5.689,47.857,35.128,70.23,59.685,80.335c5.717,2.353,13.401,5.785,15.997,5.229\r\n                c2.596-0.556,1.763-14.95,1.763-21.889c-16,2.459-21.475-3.841-24.875-7.563c-3.857-4.222-6.125-8.563-10.063-14.938\r\n                s-11.063-4.875-11.813-8.563s15-2.688,26.313,11.25c8.188,10.146,16.928,7.089,21.625,4.188c0.154-1.612,0.526-3.775,1.438-6.188\r\n                c0.967-2.557,3.625-4.104,3.208-5.854c-0.417-1.75-21.804-0.577-34-17.667c-8.809-12.344-9.129-26.955-5.667-37.833\r\n                c2.322-7.297,6.196-12.443,8.833-15.417c-1.011-2.162-2.513-6.109-2.583-11.25c-0.076-5.549,1.554-9.796,2.583-12\r\n                c3.492,0.104,8.54,0.644,14.25,2.667c5.469,1.937,9.593,4.542,12.333,6.583c4.975-1.671,12.218-3.489,21.083-3.667\r\n                c10.135-0.203,18.344,1.819,23.667,3.583c2.616-2.336,6.987-5.648,13.167-7.917c4.489-1.648,8.518-2.229,11.5-2.417\r\n                c1.143,2.165,3.075,6.519,3.167,12.332c0.085,5.351-1.426,9.47-2.416,11.664c2.867,3.459,7.394,9.875,9.502,18.995\r\n                c0.751,3.249,4.857,20.981-6.996,36.24c-12.408,15.974-33.06,13.524-33.992,15.73c-0.932,2.206,3.964,6.297,6.266,14.877\r\n                c2.302,8.58,1.327,24.979,1.327,24.979");
			set_style(path3, "fill", "none");
			set_style(path3, "stroke", "#fff");
			set_style(path3, "stroke-linecap", "round");
			set_style(path3, "stroke-linejoin", "round");
			set_style(path3, "stroke-miterlimit", "10");
			set_style(path3, "stroke-width", "8");
			add_location(path3, file$7, 165, 14, 8288);
			attr_dev(svg2, "class", "h-full");
			attr_dev(svg2, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg2, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg2, "version", "1.1");
			attr_dev(svg2, "x", "0px");
			attr_dev(svg2, "y", "0px");
			attr_dev(svg2, "viewBox", "0 0 256 256");
			set_style(svg2, "enable-background", "new 0 0 256 256");
			attr_dev(svg2, "xml:space", "preserve");
			add_location(svg2, file$7, 141, 12, 6721);
			attr_dev(a3, "class", "h-full");
			attr_dev(a3, "href", "https://github.com/vpassanisi?tab=repositories");
			attr_dev(a3, "target", "_blank");
			add_location(a3, file$7, 137, 10, 6580);
			attr_dev(div5, "class", "flex justify-center h-12 mb-4");
			add_location(div5, file$7, 21, 8, 855);
			attr_dev(a4, "class", "text-lg font-light underline");
			attr_dev(a4, "href", "https://drive.google.com/file/d/1dsJmiuSQQ-tJ52TCxLgL5QhXnVIGRmKe/view?usp=sharing");
			attr_dev(a4, "target", "_blank");
			add_location(a4, file$7, 183, 8, 9903);
			attr_dev(div6, "class", "border-none md:border-solid border-l p-4 text-center md:text-left");
			add_location(div6, file$7, 16, 6, 606);
			attr_dev(div7, "class", "flex flex-col md:flex-row max-w-xl mx-auto");
			add_location(div7, file$7, 6, 4, 245);
			attr_dev(div8, "class", "w-full");
			add_location(div8, file$7, 3, 2, 110);
			attr_dev(section, "class", "flex flex-col items-center justify-center min-h-screen bg-dark-gray-900\r\n  text-white");
			add_location(section, file$7, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div8);
			append_dev(div8, div0);
			append_dev(div0, t0);
			append_dev(div8, t1);
			append_dev(div8, hr);
			append_dev(div8, t2);
			append_dev(div8, div7);
			append_dev(div7, div1);
			append_dev(div1, t3);
			append_dev(div1, a0);
			append_dev(a0, t4);
			append_dev(div7, t5);
			append_dev(div7, div6);
			append_dev(div6, div2);
			append_dev(div2, t6);
			append_dev(div6, t7);
			append_dev(div6, div3);
			append_dev(div3, t8);
			append_dev(div6, t9);
			append_dev(div6, div4);
			append_dev(div4, t10);
			append_dev(div6, t11);
			append_dev(div6, div5);
			append_dev(div5, a1);
			append_dev(a1, svg0);
			append_dev(svg0, g3);
			append_dev(g3, g0);
			append_dev(g3, g2);
			append_dev(g2, g1);
			append_dev(g1, path0);
			append_dev(div5, t12);
			append_dev(div5, a2);
			append_dev(a2, svg1);
			append_dev(svg1, g7);
			append_dev(g7, g4);
			append_dev(g7, g6);
			append_dev(g6, g5);
			append_dev(g5, path1);
			append_dev(div5, t13);
			append_dev(div5, a3);
			append_dev(a3, svg2);
			append_dev(svg2, style);
			append_dev(style, t14);
			append_dev(svg2, path2);
			append_dev(svg2, path3);
			append_dev(div6, t15);
			append_dev(div6, a4);
			append_dev(a4, t16);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$8.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$8($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Contact", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Contact> was created with unknown prop '${key}'`);
	});

	return [];
}

class Contact extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$8, create_fragment$8, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Contact",
			options,
			id: create_fragment$8.name
		});
	}
}

/* src\routes\index.svelte generated by Svelte v3.25.0 */
const file$8 = "src\\routes\\index.svelte";

function create_fragment$9(ctx) {
	let tailwind;
	let t0;
	let main;
	let nav;
	let t1;
	let div;
	let welcome;
	let t2;
	let about;
	let t3;
	let skills_1;
	let t4;
	let projects;
	let t5;
	let contact;
	let current;
	tailwind = new Tailwind({ $$inline: true });

	nav = new Nav({
			props: { section: /*section*/ ctx[3] },
			$$inline: true
		});

	welcome = new Welcome({ $$inline: true });
	about = new About({ $$inline: true });

	skills_1 = new Skills({
			props: { skills: /*skills*/ ctx[2] },
			$$inline: true
		});

	projects = new Projects({
			props: {
				fullstack: /*fullstack*/ ctx[0],
				frontend: /*frontend*/ ctx[1]
			},
			$$inline: true
		});

	contact = new Contact({ $$inline: true });

	const block = {
		c: function create() {
			create_component(tailwind.$$.fragment);
			t0 = space();
			main = element("main");
			create_component(nav.$$.fragment);
			t1 = space();
			div = element("div");
			create_component(welcome.$$.fragment);
			t2 = space();
			create_component(about.$$.fragment);
			t3 = space();
			create_component(skills_1.$$.fragment);
			t4 = space();
			create_component(projects.$$.fragment);
			t5 = space();
			create_component(contact.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			claim_component(tailwind.$$.fragment, nodes);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", {});
			var main_nodes = children(main);
			claim_component(nav.$$.fragment, main_nodes);
			t1 = claim_space(main_nodes);
			div = claim_element(main_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			claim_component(welcome.$$.fragment, div_nodes);
			t2 = claim_space(div_nodes);
			claim_component(about.$$.fragment, div_nodes);
			t3 = claim_space(div_nodes);
			claim_component(skills_1.$$.fragment, div_nodes);
			t4 = claim_space(div_nodes);
			claim_component(projects.$$.fragment, div_nodes);
			t5 = claim_space(div_nodes);
			claim_component(contact.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "w-full md:w-3/4 ml-auto");
			add_location(div, file$8, 66, 2, 1909);
			add_location(main, file$8, 64, 0, 1878);
		},
		m: function mount(target, anchor) {
			mount_component(tailwind, target, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);
			mount_component(nav, main, null);
			append_dev(main, t1);
			append_dev(main, div);
			mount_component(welcome, div, null);
			append_dev(div, t2);
			mount_component(about, div, null);
			append_dev(div, t3);
			mount_component(skills_1, div, null);
			append_dev(div, t4);
			mount_component(projects, div, null);
			append_dev(div, t5);
			mount_component(contact, div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const nav_changes = {};
			if (dirty & /*section*/ 8) nav_changes.section = /*section*/ ctx[3];
			nav.$set(nav_changes);
			const skills_1_changes = {};
			if (dirty & /*skills*/ 4) skills_1_changes.skills = /*skills*/ ctx[2];
			skills_1.$set(skills_1_changes);
			const projects_changes = {};
			if (dirty & /*fullstack*/ 1) projects_changes.fullstack = /*fullstack*/ ctx[0];
			if (dirty & /*frontend*/ 2) projects_changes.frontend = /*frontend*/ ctx[1];
			projects.$set(projects_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(tailwind.$$.fragment, local);
			transition_in(nav.$$.fragment, local);
			transition_in(welcome.$$.fragment, local);
			transition_in(about.$$.fragment, local);
			transition_in(skills_1.$$.fragment, local);
			transition_in(projects.$$.fragment, local);
			transition_in(contact.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(tailwind.$$.fragment, local);
			transition_out(nav.$$.fragment, local);
			transition_out(welcome.$$.fragment, local);
			transition_out(about.$$.fragment, local);
			transition_out(skills_1.$$.fragment, local);
			transition_out(projects.$$.fragment, local);
			transition_out(contact.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(tailwind, detaching);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			destroy_component(nav);
			destroy_component(welcome);
			destroy_component(about);
			destroy_component(skills_1);
			destroy_component(projects);
			destroy_component(contact);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$9.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload(page, session) {
	const a = await this.fetch(`https://portfolio-strapi-289321.wl.r.appspot.com/projects?type=fullStack`);
	const fullstack = await a.json();
	const b = await this.fetch(`https://portfolio-strapi-289321.wl.r.appspot.com/projects?type=frontend`);
	const frontend = await b.json();
	const c = await this.fetch(`https://portfolio-strapi-289321.wl.r.appspot.com/techs?type=skill`);
	const skills = await c.json();
	return { fullstack, frontend, skills };
}

function instance$9($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	let { fullstack } = $$props;
	let { frontend } = $$props;
	let { skills } = $$props;
	let section = "welcome";

	onMount(() => {
		document.addEventListener("scroll", () => {
			const scroll = window.scrollY;
			const screen = window.innerHeight;

			switch (true) {
				case screen * 4 <= scroll && scroll < screen * 5:
					$$invalidate(3, section = "contact");
					break;
				case screen * 3 <= scroll && scroll < screen * 4:
					$$invalidate(3, section = "projects");
					break;
				case screen * 2 <= scroll && scroll < screen * 3:
					$$invalidate(3, section = "skills");
					break;
				case screen <= scroll && scroll < screen * 2:
					$$invalidate(3, section = "aboutMe");
					break;
				case scroll < screen:
					$$invalidate(3, section = "welcome");
					break;
			}
		});
	});

	const writable_props = ["fullstack", "frontend", "skills"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("fullstack" in $$props) $$invalidate(0, fullstack = $$props.fullstack);
		if ("frontend" in $$props) $$invalidate(1, frontend = $$props.frontend);
		if ("skills" in $$props) $$invalidate(2, skills = $$props.skills);
	};

	$$self.$capture_state = () => ({
		preload,
		onMount,
		Tailwind,
		Nav,
		Welcome,
		About,
		Skills,
		Projects,
		Contact,
		fullstack,
		frontend,
		skills,
		section
	});

	$$self.$inject_state = $$props => {
		if ("fullstack" in $$props) $$invalidate(0, fullstack = $$props.fullstack);
		if ("frontend" in $$props) $$invalidate(1, frontend = $$props.frontend);
		if ("skills" in $$props) $$invalidate(2, skills = $$props.skills);
		if ("section" in $$props) $$invalidate(3, section = $$props.section);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [fullstack, frontend, skills, section];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$9, create_fragment$9, safe_not_equal, { fullstack: 0, frontend: 1, skills: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$9.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*fullstack*/ ctx[0] === undefined && !("fullstack" in props)) {
			console.warn("<Routes> was created without expected prop 'fullstack'");
		}

		if (/*frontend*/ ctx[1] === undefined && !("frontend" in props)) {
			console.warn("<Routes> was created without expected prop 'frontend'");
		}

		if (/*skills*/ ctx[2] === undefined && !("skills" in props)) {
			console.warn("<Routes> was created without expected prop 'skills'");
		}
	}

	get fullstack() {
		throw new Error("<Routes>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set fullstack(value) {
		throw new Error("<Routes>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get frontend() {
		throw new Error("<Routes>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set frontend(value) {
		throw new Error("<Routes>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get skills() {
		throw new Error("<Routes>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set skills(value) {
		throw new Error("<Routes>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Routes;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
